<#@ template language="C#" #>
<#@ import namespace="System" #>
using System;

namespace Emgu.CV
{
   public partial class CvInvoke
   {
      // The following name are .Net Windows specific
      // When run under Mono, change the mapping in Emgu.CV.dll.config accordingly

      /// <summary>
      /// The file name of the cxcore library
      /// </summary>
      public const string CXCORE_LIBRARY = "<#= GetLibraryName("cxcore") #>";
      /// <summary>
      /// The file name of the cv library
      /// </summary>
      public const string CV_LIBRARY = "<#= GetLibraryName("cv") #>";
      /// <summary>
      /// The file name of the highgui library
      /// </summary>
      public const string HIGHGUI_LIBRARY = "<#= GetLibraryName("highgui") #>";
      /// <summary>
      /// The file name of the cvaux library
      /// </summary>
      public const string CVAUX_LIBRARY = "<#= GetLibraryName("cvaux") #>";
      /// <summary>
      /// The file name of the cvextern library
      /// </summary>
      public const string EXTERN_LIBRARY = "<#= "cvextern" + Extension #>";
   }
}
<#+ 
	private OS OperatingSystem
	{
		get
		{
			int p = (int)Environment.OSVersion.Platform;
			return ((p == 4) || (p == 128)) ? OS.Linux : OS.Windows;
        }
	}

    public enum OS
    {
		Linux,
		Windows
    }
    
	private String Version
	{
		get
		{	
			return "200";
		}
	}
	
	private String Postfix
	{
		get
		{
			return "";
		}
	}
	
	private String Extension
	{
		get
		{
			if (OperatingSystem == OS.Windows)
				return ".dll";
		    else
				return ".so";
		}
	}

	private String GetLibraryName(String moduleName)
	{
		return moduleName + Version + Postfix + Extension;
	}
#>
