//----------------------------------------------------------------------------
//
//  Copyright (C) 2004-2014 by EMGU Corporation. All rights reserved.
//
//  Vector of ${VECTOR_NAME}
//
//  This file is automatically generated, do not modify.
//----------------------------------------------------------------------------

using System;
using System.Drawing;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using Emgu.CV.Structure;

namespace ${NAMESPACE_CS}
{
   /// <summary>
   /// Wraped class of the C++ standard vector of ${VECTOR_NAME}.
   /// </summary>
   public partial class VectorOf${VECTOR_NAME} : Emgu.Util.UnmanagedObject, IInputArray, IOutputArray, IInputOutputArray
   {
      /// <summary>
      /// Create the standard vector of ${VECTOR_NAME} 
      /// </summary>
      public VectorOf${VECTOR_NAME}(${ELEMENT_OF_ELEMENT}[][] values)
         : this()
      {
         using (${VECTOR_NAME} v = new ${VECTOR_NAME}())
         {
            for (int i = 0; i < values.Length; i++)
            {
               v.Push(values[i]);
               Push(v);
               v.Clear();
            }
         }
      }
	  
	  /// <summary>
      /// Convert the standard vector to arrays of int
      /// </summary>
      /// <returns>Arrays of int</returns>
      public ${ELEMENT_OF_ELEMENT}[][] ToArrayOfArray()
      {
         int size = Size;
         ${ELEMENT_OF_ELEMENT}[][] res = new ${ELEMENT_OF_ELEMENT}[size][];
         for (int i = 0; i < size; i++)
         {
            using (${VECTOR_NAME} v = this[i])
            {
               res[i] = v.ToArray();
            }
         }
         return res;
      }
   }
}
