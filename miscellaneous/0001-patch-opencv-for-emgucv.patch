From d1f9539859cd99e351ab1950f67fa093227fee70 Mon Sep 17 00:00:00 2001
From: Canming Huang <support@emgu.com>
Date: Mon, 8 Oct 2012 21:59:05 -0400
Subject: [PATCH] patch opencv for emgucv.

---
 3rdparty/libjasper/CMakeLists.txt                  |    4 ++++
 3rdparty/libjpeg/CMakeLists.txt                    |    4 ++++
 3rdparty/libpng/CMakeLists.txt                     |    4 ++++
 3rdparty/libtiff/CMakeLists.txt                    |    4 ++++
 3rdparty/zlib/CMakeLists.txt                       |    4 ++++
 cmake/OpenCVDetectTBB.cmake                        |   20 +++++++++++++------
 cmake/OpenCVFindIPP.cmake                          |    5 +++--
 cmake/OpenCVModule.cmake                           |   13 ++++++++----
 modules/contrib/src/colormap.cpp                   |    1 +
 modules/core/src/drawing.cpp                       |   14 ++++++-------
 modules/gpu/src/match_template.cpp                 |    2 +-
 modules/gpu/src/split_merge.cpp                    |    7 ++++---
 modules/highgui/CMakeLists.txt                     |   21 ++++++--------------
 .../highgui/include/opencv2/highgui/highgui_c.h    |    3 +++
 modules/highgui/src/cap_openni.cpp                 |    8 ++++++++
 modules/legacy/src/3dtracker.cpp                   |    6 +++---
 modules/objdetect/src/latentsvm.cpp                |    2 +-
 17 files changed, 80 insertions(+), 42 deletions(-)

diff --git a/3rdparty/libjasper/CMakeLists.txt b/3rdparty/libjasper/CMakeLists.txt
index 5b850c9..46ce17f 100644
--- a/3rdparty/libjasper/CMakeLists.txt
+++ b/3rdparty/libjasper/CMakeLists.txt
@@ -39,6 +39,10 @@ set_target_properties(${JASPER_LIBRARY}
   ARCHIVE_OUTPUT_DIRECTORY ${3P_LIBRARY_OUTPUT_PATH}
   )
 
+IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+  set_target_properties(${JASPER_LIBRARY} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+ENDIF()
+
 if(ENABLE_SOLUTION_FOLDERS)
   set_target_properties(${JASPER_LIBRARY} PROPERTIES FOLDER "3rdparty")
 endif()
diff --git a/3rdparty/libjpeg/CMakeLists.txt b/3rdparty/libjpeg/CMakeLists.txt
index 708e63e..a26b2b3 100644
--- a/3rdparty/libjpeg/CMakeLists.txt
+++ b/3rdparty/libjpeg/CMakeLists.txt
@@ -33,6 +33,10 @@ set_target_properties(${JPEG_LIBRARY}
   ARCHIVE_OUTPUT_DIRECTORY ${3P_LIBRARY_OUTPUT_PATH}
   )
 
+IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+  set_target_properties(${JPEG_LIBRARY} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+ENDIF()
+
 if(ENABLE_SOLUTION_FOLDERS)
   set_target_properties(${JPEG_LIBRARY} PROPERTIES FOLDER "3rdparty")
 endif()
diff --git a/3rdparty/libpng/CMakeLists.txt b/3rdparty/libpng/CMakeLists.txt
index 41d57f3..d123f62 100644
--- a/3rdparty/libpng/CMakeLists.txt
+++ b/3rdparty/libpng/CMakeLists.txt
@@ -33,6 +33,10 @@ if(ENABLE_SOLUTION_FOLDERS)
   set_target_properties(${PNG_LIBRARY} PROPERTIES FOLDER "3rdparty")
 endif()
 
+IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+  set_target_properties(${PNG_LIBRARY} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+ENDIF()
+
 if(NOT BUILD_SHARED_LIBS)
   install(TARGETS ${PNG_LIBRARY} ARCHIVE DESTINATION ${OPENCV_3P_LIB_INSTALL_PATH} COMPONENT main)
 endif()
diff --git a/3rdparty/libtiff/CMakeLists.txt b/3rdparty/libtiff/CMakeLists.txt
index ed9d1c8..d2cdfd9 100644
--- a/3rdparty/libtiff/CMakeLists.txt
+++ b/3rdparty/libtiff/CMakeLists.txt
@@ -105,6 +105,10 @@ set_target_properties(${TIFF_LIBRARY}
     ARCHIVE_OUTPUT_DIRECTORY ${3P_LIBRARY_OUTPUT_PATH}
     )
 
+IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+  set_target_properties(${TIFF_LIBRARY} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+ENDIF()
+
 if(ENABLE_SOLUTION_FOLDERS)
   set_target_properties(${TIFF_LIBRARY} PROPERTIES FOLDER "3rdparty")
 endif()
diff --git a/3rdparty/zlib/CMakeLists.txt b/3rdparty/zlib/CMakeLists.txt
index 72b3309..57ef02c 100644
--- a/3rdparty/zlib/CMakeLists.txt
+++ b/3rdparty/zlib/CMakeLists.txt
@@ -90,6 +90,10 @@ set_target_properties(${ZLIB_LIBRARY} PROPERTIES
         ARCHIVE_OUTPUT_DIRECTORY ${3P_LIBRARY_OUTPUT_PATH}
     )
 
+IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+  set_target_properties(${ZLIB_LIBRARY} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+ENDIF()
+
 if(ENABLE_SOLUTION_FOLDERS)
   set_target_properties(${ZLIB_LIBRARY} PROPERTIES FOLDER "3rdparty")
 endif()
diff --git a/cmake/OpenCVDetectTBB.cmake b/cmake/OpenCVDetectTBB.cmake
index c37a8c3..37a8e33 100644
--- a/cmake/OpenCVDetectTBB.cmake
+++ b/cmake/OpenCVDetectTBB.cmake
@@ -44,12 +44,20 @@ if(NOT HAVE_TBB)
       else()
         get_filename_component(_TBB_LIB_PATH "${TBB_INCLUDE_DIRS}/../lib" ABSOLUTE)
 
-        if(CMAKE_SYSTEM_PROCESSOR MATCHES amd64*|x86_64* OR MSVC64)
-          set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/intel64")
-        else()
-          set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/ia32")
-        endif()
-
+		if (MSVC)
+            if(CMAKE_CL_64)
+                set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/intel64")
+            else()
+                set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/ia32")
+            endif()
+        else(MSVC)
+            if(${CMAKE_SYSTEM_PROCESSOR} MATCHES amd64*|x86_64* OR MSVC64)
+                set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/intel64")
+            elseif(${CMAKE_SYSTEM_PROCESSOR} MATCHES x86*|i386*|i686*)
+                set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/ia32")
+            endif()
+        endif(MSVC)
+		
         if(MSVC80)
           set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/vc8")
         elseif(MSVC90)
diff --git a/cmake/OpenCVFindIPP.cmake b/cmake/OpenCVFindIPP.cmake
index 6d735be..c080539 100644
--- a/cmake/OpenCVFindIPP.cmake
+++ b/cmake/OpenCVFindIPP.cmake
@@ -64,13 +64,14 @@ function(get_ipp_version _ROOT_DIR)
     # read IPP version info from file
     file(STRINGS ${_ROOT_DIR}/include/ippversion.h STR1 REGEX "IPP_VERSION_MAJOR")
     file(STRINGS ${_ROOT_DIR}/include/ippversion.h STR2 REGEX "IPP_VERSION_MINOR")
-    file(STRINGS ${_ROOT_DIR}/include/ippversion.h STR3 REGEX "IPP_VERSION_BUILD")
+    #file(STRINGS ${_ROOT_DIR}/include/ippversion.h STR3 REGEX "IPP_VERSION_BUILD")
     file(STRINGS ${_ROOT_DIR}/include/ippversion.h STR4 REGEX "IPP_VERSION_STR")
 
     # extract info and assign to variables
     string(REGEX MATCHALL "[0-9]+" _MAJOR ${STR1})
     string(REGEX MATCHALL "[0-9]+" _MINOR ${STR2})
-    string(REGEX MATCHALL "[0-9]+" _BUILD ${STR3})
+    #string(REGEX MATCHALL "[0-9]+" _BUILD ${STR3})
+	set (_BUILD 0)
     string(REGEX MATCHALL "[0-9]+[.]+[0-9]+[^\"]+|[0-9]+[.]+[0-9]+" _VERSION_STR ${STR4})
 
     # export info to parent scope
diff --git a/cmake/OpenCVModule.cmake b/cmake/OpenCVModule.cmake
index 018a467..9e2edb0 100644
--- a/cmake/OpenCVModule.cmake
+++ b/cmake/OpenCVModule.cmake
@@ -455,11 +455,16 @@ macro(ocv_create_module)
   set_target_properties(${the_module} PROPERTIES
     OUTPUT_NAME "${the_module}${OPENCV_DLLVERSION}"
     DEBUG_POSTFIX "${OPENCV_DEBUG_POSTFIX}"
-    ARCHIVE_OUTPUT_DIRECTORY ${LIBRARY_OUTPUT_PATH}
-    RUNTIME_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH}
+    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER}
+	LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER}
+    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER}
     INSTALL_NAME_DIR lib
   )
 
+  IF(DEFINED EMGUCV_PLATFORM_TOOLSET)
+    set_target_properties(${the_module} PROPERTIES PLATFORM_TOOLSET ${EMGUCV_PLATFORM_TOOLSET})
+  ENDIF()
+  
   # For dynamic link numbering convenions
   if(NOT ANDROID)
     # Android SDK build scripts can include only .so files into final .apk
@@ -486,8 +491,8 @@ macro(ocv_create_module)
   endif()
 
   install(TARGETS ${the_module}
-    RUNTIME DESTINATION bin COMPONENT main
-    LIBRARY DESTINATION ${OPENCV_LIB_INSTALL_PATH} COMPONENT main
+    RUNTIME DESTINATION bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER} COMPONENT main
+    LIBRARY DESTINATION bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER} COMPONENT main
     ARCHIVE DESTINATION ${OPENCV_LIB_INSTALL_PATH} COMPONENT main
     )
 
diff --git a/modules/contrib/src/colormap.cpp b/modules/contrib/src/colormap.cpp
index bb317f7..867e534 100644
--- a/modules/contrib/src/colormap.cpp
+++ b/modules/contrib/src/colormap.cpp
@@ -513,6 +513,7 @@ namespace colormap
             colormap == COLORMAP_HOT ? (colormap::ColorMap*)(new colormap::Hot) :
             colormap == COLORMAP_HSV ? (colormap::ColorMap*)(new colormap::HSV) :
             colormap == COLORMAP_JET ? (colormap::ColorMap*)(new colormap::Jet) :
+            colormap == COLORMAP_RAINBOW ? (colormap::ColorMap*)(new colormap::Rainbow) :
             colormap == COLORMAP_OCEAN ? (colormap::ColorMap*)(new colormap::Ocean) :
             colormap == COLORMAP_PINK ? (colormap::ColorMap*)(new colormap::Pink) :
             colormap == COLORMAP_RAINBOW ? (colormap::ColorMap*)(new colormap::Rainbow) :
diff --git a/modules/core/src/drawing.cpp b/modules/core/src/drawing.cpp
index 50e51fb..a8e64df 100644
--- a/modules/core/src/drawing.cpp
+++ b/modules/core/src/drawing.cpp
@@ -554,9 +554,9 @@ Line2( Mat& img, Point pt1, Point pt2, const void* color )
     int ax, ay;
     int i, j, x, y;
     int x_step, y_step;
-    int cb = ((uchar*)color)[0];
-    int cg = ((uchar*)color)[1];
-    int cr = ((uchar*)color)[2];
+    uchar cb = ((uchar*)color)[0];
+    uchar cg = ((uchar*)color)[1];
+    uchar cr = ((uchar*)color)[2];
     int pix_size = (int)img.elemSize();
     uchar *ptr = img.data, *tptr;
     size_t step = img.step;
@@ -617,9 +617,9 @@ Line2( Mat& img, Point pt1, Point pt2, const void* color )
             0 <= y && y < size.height ) \
         {                               \
             tptr = ptr + y*step + x*3;  \
-            tptr[0] = (uchar)cb;        \
-            tptr[1] = (uchar)cg;        \
-            tptr[2] = (uchar)cr;        \
+            tptr[0] = cb;        \
+            tptr[1] = cg;        \
+            tptr[2] = cr;        \
         }
 
         ICV_PUT_POINT((pt2.x + (XY_ONE >> 1)) >> XY_SHIFT,
@@ -660,7 +660,7 @@ Line2( Mat& img, Point pt1, Point pt2, const void* color )
             0 <= y && y < size.height ) \
         {                           \
             tptr = ptr + y*step + x;\
-            tptr[0] = (uchar)cb;    \
+            tptr[0] = cb;    \
         }
 
         ICV_PUT_POINT((pt2.x + (XY_ONE >> 1)) >> XY_SHIFT,
diff --git a/modules/gpu/src/match_template.cpp b/modules/gpu/src/match_template.cpp
index c988000..97fbeb5 100644
--- a/modules/gpu/src/match_template.cpp
+++ b/modules/gpu/src/match_template.cpp
@@ -49,7 +49,7 @@ using namespace std;
 #if !defined (HAVE_CUDA)
 
 void cv::gpu::matchTemplate(const GpuMat&, const GpuMat&, GpuMat&, int, Stream&) { throw_nogpu(); }
-
+void cv::gpu::matchTemplate(const GpuMat&, const GpuMat&, GpuMat&, int, MatchTemplateBuf&, Stream&) { throw_nogpu(); }
 #else
 
 namespace cv { namespace gpu { namespace device
diff --git a/modules/gpu/src/split_merge.cpp b/modules/gpu/src/split_merge.cpp
index 3153c5f..3a4ff80 100644
--- a/modules/gpu/src/split_merge.cpp
+++ b/modules/gpu/src/split_merge.cpp
@@ -95,9 +95,9 @@ namespace
 
         CV_Assert(single_channel_only);
         CV_Assert(total_channels <= 4);
-
+        dst.create(size, CV_MAKETYPE(depth, total_channels));
         if (total_channels == 1)
-            src[0].copyTo(dst);
+            cudaSafeCall( cudaMemcpy2DAsync(dst.data, dst.step, src[0].data, src[0].step, src[0].cols * src[0].elemSize(), src[0].rows, cudaMemcpyDeviceToDevice, stream) );
         else
         {
             dst.create(size, CV_MAKETYPE(depth, total_channels));
@@ -128,7 +128,8 @@ namespace
 
         if (num_channels == 1)
         {
-            src.copyTo(dst[0]);
+            dst[0].create(src.size(), depth);
+			cudaSafeCall( cudaMemcpy2DAsync(dst[0].data, dst[0].step, src.data, src.step, src.cols * src.elemSize(), src.rows, cudaMemcpyDeviceToDevice, stream) );
             return;
         }
 
diff --git a/modules/highgui/CMakeLists.txt b/modules/highgui/CMakeLists.txt
index d53c17c..011c58b 100644
--- a/modules/highgui/CMakeLists.txt
+++ b/modules/highgui/CMakeLists.txt
@@ -252,22 +252,13 @@ if(WIN32 AND WITH_FFMPEG)
   #                     COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/$<CONFIGURATION>/${ffmpeg_bare_name_ver}"
   #                     COMMENT "Copying ${ffmpeg_path} to the output directory")
   #else
-  if(MSVC_IDE)
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/Release/${ffmpeg_bare_name_ver}"
-                       COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/Debug/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  elseif(MSVC)
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/${CMAKE_BUILD_TYPE}/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  else()
-    add_custom_command(TARGET ${the_module} POST_BUILD
-                       COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}/${ffmpeg_bare_name_ver}"
-                       COMMENT "Copying ${ffmpeg_path} to the output directory")
-  endif()
 
-  install(FILES "${ffmpeg_path}" DESTINATION bin COMPONENT main RENAME "${ffmpeg_bare_name_ver}")
+  add_custom_command(TARGET ${the_module} POST_BUILD
+                     COMMAND ${CMAKE_COMMAND} -E copy "${ffmpeg_path}" "${EXECUTABLE_OUTPUT_PATH}${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER}/${ffmpeg_bare_name_ver}"
+                     COMMENT "Copying ${ffmpeg_path} to the output directory")
+
+  install(FILES "${ffmpeg_path}" DESTINATION bin${UNMANAGED_LIBRARY_OUTPUT_SUBFOLDER} COMPONENT main RENAME "${ffmpeg_bare_name_ver}")
+
 endif()
 
 ocv_add_accuracy_tests()
diff --git a/modules/highgui/include/opencv2/highgui/highgui_c.h b/modules/highgui/include/opencv2/highgui/highgui_c.h
index ddd3003..f8dcad5 100644
--- a/modules/highgui/include/opencv2/highgui/highgui_c.h
+++ b/modules/highgui/include/opencv2/highgui/highgui_c.h
@@ -534,6 +534,9 @@ CVAPI(int)    cvSetCaptureProperty( CvCapture* capture, int property_id, double
 // Return the type of the capturer (eg, CV_CAP_V4W, CV_CAP_UNICAP), which is unknown if created with CV_CAP_ANY
 CVAPI(int)    cvGetCaptureDomain( CvCapture* capture);
 
+// Return a pointer to the xn::Context of OpenNI from the CvCapture)
+CVAPI(void*) cvGetOpenniCaptureContext( CvCapture* capture);
+
 /* "black box" video file writer structure */
 typedef struct CvVideoWriter CvVideoWriter;
 
diff --git a/modules/highgui/src/cap_openni.cpp b/modules/highgui/src/cap_openni.cpp
index 75aed56..074d494 100644
--- a/modules/highgui/src/cap_openni.cpp
+++ b/modules/highgui/src/cap_openni.cpp
@@ -449,6 +449,8 @@ public:
 
     bool isOpened() const;
 
+    xn::Context* getOpenNIContext() { return &context; }
+
 protected:
     struct OutputMap
     {
@@ -1381,4 +1383,10 @@ CvCapture* cvCreateFileCapture_OpenNI( const char* filename )
     return 0;
 }
 
+// Return a pointer to the xn::Context of OpenNI from the CvCapture)
+void* cvGetOpenniCaptureContext( CvCapture* capture)
+{
+   CvCapture_OpenNI* openniCapture = (CvCapture_OpenNI*) capture;
+   return openniCapture->getOpenNIContext();
+}
 #endif
diff --git a/modules/legacy/src/3dtracker.cpp b/modules/legacy/src/3dtracker.cpp
index 536a534..866c1d8 100644
--- a/modules/legacy/src/3dtracker.cpp
+++ b/modules/legacy/src/3dtracker.cpp
@@ -322,7 +322,7 @@ static void DrawEtalon(IplImage *img, CvPoint2D32f *corners,
     int i;
     int x, y;
     CvPoint prev_pt = { 0, 0 };
-    static const CvScalar rgb_colors[] = {
+    static CvScalar rgb_colors[] = {
         {{0,0,255}},
         {{0,128,255}},
         {{0,200,200}},
@@ -330,10 +330,10 @@ static void DrawEtalon(IplImage *img, CvPoint2D32f *corners,
         {{200,200,0}},
         {{255,0,0}},
         {{255,0,255}} };
-    static const CvScalar gray_colors[] = {
+    static CvScalar gray_colors[] = {
         {{80}}, {{120}}, {{160}}, {{200}}, {{100}}, {{140}}, {{180}}
     };
-    const CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
+    CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
 
     CvScalar color = colors[0];
     for (y = 0, i = 0; y < etalon_size.height; y++)
diff --git a/modules/objdetect/src/latentsvm.cpp b/modules/objdetect/src/latentsvm.cpp
index 89fd048..45490be 100644
--- a/modules/objdetect/src/latentsvm.cpp
+++ b/modules/objdetect/src/latentsvm.cpp
@@ -277,7 +277,7 @@ int searchObjectThreshold(const CvLSVMFeaturePyramid *H,
 
 
     // Matching
-#ifdef HAVE_TBB
+#if 0
     if (numThreads <= 0)
     {
         opResult = LATENT_SVM_TBB_NUMTHREADS_NOT_CORRECT;
-- 
1.7.10.msysgit.1

