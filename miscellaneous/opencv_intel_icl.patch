Index: 3rdparty/libjpeg/CMakeLists.txt
===================================================================
--- 3rdparty/libjpeg/CMakeLists.txt	(revision 4460)
+++ 3rdparty/libjpeg/CMakeLists.txt	(working copy)
@@ -42,6 +42,11 @@
     set_source_files_properties(jcdctmgr.c PROPERTIES COMPILE_FLAGS "-O1")
 endif()
 
+IF(WIN32)
+set_source_files_properties(jcdctmgr.c PROPERTIES COMPILE_FLAGS "-O1")
+set_source_files_properties(jddctmgr.c PROPERTIES COMPILE_FLAGS "-O1")
+ENDIF()
+
 set_target_properties(${the_target}
 	PROPERTIES OUTPUT_NAME "${the_target}"
 	DEBUG_POSTFIX "${OPENCV_DEBUG_POSTFIX}"
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 4460)
+++ CMakeLists.txt	(working copy)
@@ -622,21 +622,11 @@
                    link_directories("${TBB_LIB_DIR}")
                    set(OPENCV_LINKER_LIBS ${OPENCV_LINKER_LIBS} tbb)
                else()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES amd64*)
+                   if(CMAKE_CL_64)
                        set(X86_64 1)
-                   endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES x86_64*)
-                       set(X86_64 1)
-                   endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES i686*)
+                   else()
                        set(X86 1)
                    endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES i386*)
-                       set(X86 1)
-                   endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES x86*)
-                       set(X86 1)
-                   endif()
 
                    set(_TBB_LIB_PATH "${TBB_INCLUDE_DIR}/../lib")
                    if (X86_64)
@@ -648,6 +638,8 @@
                        set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/vc8")
                    elseif(MSVC90)
                        set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/vc9")
+				   elseif(MSVC10)
+				       set(_TBB_LIB_PATH "${_TBB_LIB_PATH}/vc10")
                    endif()
                    set(TBB_LIB_DIR "${_TBB_LIB_PATH}" CACHE PATH "Full path of TBB library directory")
                    link_directories("${TBB_LIB_DIR}")
@@ -731,17 +723,29 @@
 endif()
 endif()
 
-foreach(v "6.1" "6.0" "5.3" "5.2" "5.1")
+IF(WIN32 AND CV_ICC)
+  get_filename_component(IPP_SEARCH_PATH "${CMAKE_CXX_COMPILER}" PATH)
+  IF(CMAKE_CL_64)
+    SET(IPP_SEARCH_PATH ${IPP_SEARCH_PATH}/../../redist/intel64/ipp)
+  ELSE()
+    SET(IPP_SEARCH_PATH ${IPP_SEARCH_PATH}/../../redist/ia32/ipp)
+  ENDIF()
+ENDIF()
+
+foreach(v "7.0" "6.1" "6.0" "5.3" "5.2" "5.1")
     if(NOT IPP_FOUND)
         if(WIN32)
             find_path(IPP_PATH "ippi-${v}.dll"
-                PATHS ${CMAKE_PROGRAM_PATH} ${CMAKE_SYSTEM_PROGRAM_PATH}
+                PATHS ${CMAKE_PROGRAM_PATH} ${CMAKE_SYSTEM_PROGRAM_PATH} ${IPP_SEARCH_PATH}
                 DOC "The path to IPP dynamic libraries")
             if(NOT IPP_PATH)
                 find_path(IPP_PATH "ippiem64t-${v}.dll"
                     PATHS ${CMAKE_PROGRAM_PATH} ${CMAKE_SYSTEM_PROGRAM_PATH}
                     DOC "The path to IPP dynamic libraries")
             endif()
+			IF (IPP_PATH)
+			   SET (IPP_VERSION ${v})
+			ENDIF()
         endif()
         if(UNIX)
             find_path(IPP_PATH "libippi${CMAKE_SHARED_LIBRARY_SUFFIX}.${v}"
@@ -754,7 +758,7 @@
             endif()
         endif()
         if(IPP_PATH)
-            file(GLOB IPP_HDRS "${IPP_PATH}/../include")
+            file(GLOB IPP_HDRS "${IPP_PATH}/../include" "${IPP_PATH}/../../../ipp/include")
             if(IPP_HDRS)
                 set(IPP_FOUND TRUE)
             endif()
@@ -772,28 +776,59 @@
 
 if(IPP_FOUND AND USE_IPP)
     add_definitions(-DHAVE_IPP)
-    include_directories("${IPP_PATH}/../include")
-    link_directories("${IPP_PATH}/../lib")
 
-    file(GLOB em64t_files "${IPP_PATH}/../lib/*em64t*")
-    set(IPP_ARCH)
-    if(em64t_files)
-        set(IPP_ARCH "em64t")
-    endif()
+	IF (IPP_VERSION STREQUAL "7.0")
+		#MESSAGE(STATUS "IPP 7.0")
+		include_directories("${IPP_PATH}/../../../ipp/include")
+		
+		IF(WIN32 AND NOT CMAKE_CL_64)
+			link_directories(
+			"${IPP_PATH}/../../../ipp/lib/ia32"
+			"${IPP_PATH}/../../../compiler/lib/ia32")
+		ELSEIF(WIN32 AND CMAKE_CL_64)
+			link_directories(
+			"${IPP_PATH}/../../../ipp/lib/intel64"
+			"${IPP_PATH}/../../../compiler/lib/intel64")
+		ENDIF()
+		LIST(APPEND OPENCV_LINKER_LIBS libiomp5md)
+		
+		set(A ${CMAKE_STATIC_LIBRARY_PREFIX})
+		set(B ${IPP_ARCH}${CMAKE_STATIC_LIBRARY_SUFFIX})
+		if(WIN32)
+			set(L _t)
+		else()
+			set(L)
+		endif()
+		set(IPP_LIBS ${A}ipps${B} 
+                 ${A}ippi${B} 
+                 ${A}ippvm${B}
+                 ${A}ippcc${B}
+                 ${A}ippcv${B}
+                 ${A}ippcore${IPP_ARCH}${L}${CMAKE_STATIC_LIBRARY_SUFFIX})
+	ELSE()
+	    include_directories("${IPP_PATH}/../include")
+		link_directories("${IPP_PATH}/../lib")
+		file(GLOB em64t_files "${IPP_PATH}/../lib/*em64t*")
+		set(IPP_ARCH)
+		if(em64t_files)
+			set(IPP_ARCH "em64t")
+		endif()
 
-    set(A ${CMAKE_STATIC_LIBRARY_PREFIX})
-    set(B ${IPP_ARCH}${CMAKE_STATIC_LIBRARY_SUFFIX})
-    if(WIN32)
-        set(L l)
-    else()
-        set(L)
-    endif()
-    set(IPP_LIBS ${A}ippsmerged${B} ${A}ippsemerged${B}
+		set(A ${CMAKE_STATIC_LIBRARY_PREFIX})
+		set(B ${IPP_ARCH}${CMAKE_STATIC_LIBRARY_SUFFIX})
+		if(WIN32)
+			set(L l)
+		else()
+			set(L)
+		endif()
+		set(IPP_LIBS ${A}ippsmerged${B} ${A}ippsemerged${B}
                  ${A}ippimerged${B} ${A}ippiemerged${B}
                  ${A}ippvmmerged${B} ${A}ippvmemerged${B}
                  ${A}ippccmerged${B} ${A}ippccemerged${B}
                  ${A}ippcvmerged${B} ${A}ippcvemerged${B}
                  ${A}ippcore${IPP_ARCH}${L}${CMAKE_STATIC_LIBRARY_SUFFIX})
+	ENDIF()
+	MESSAGE(STATUS "IPP_LIBS: ${IPP_LIBS}")
 endif()
 
 ################## Extra HighGUI libs on Windows ###################
Index: modules/legacy/src/3dtracker.cpp
===================================================================
--- modules/legacy/src/3dtracker.cpp	(revision 4460)
+++ modules/legacy/src/3dtracker.cpp	(working copy)
@@ -331,7 +331,7 @@
     int i;
     int x, y;
     CvPoint prev_pt = { 0, 0 };
-    static const CvScalar rgb_colors[] = {
+    static CvScalar rgb_colors[] = {
         {{0,0,255}},
         {{0,128,255}},
         {{0,200,200}},
@@ -339,10 +339,10 @@
         {{200,200,0}},
         {{255,0,0}},
         {{255,0,255}} };
-    static const CvScalar gray_colors[] = {
+    static CvScalar gray_colors[] = {
         {{80}}, {{120}}, {{160}}, {{200}}, {{100}}, {{140}}, {{180}}
     };
-    const CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
+    CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
 
     CvScalar color = colors[0];
     for (y = 0, i = 0; y < etalon_size.height; y++)
