Index: 3rdparty/libjpeg/CMakeLists.txt
===================================================================
--- 3rdparty/libjpeg/CMakeLists.txt	(revision 4732)
+++ 3rdparty/libjpeg/CMakeLists.txt	(working copy)
@@ -24,6 +24,11 @@
 # 				Define the library target:
 # ----------------------------------------------------------------------------------
 
+IF(WIN32 AND CV_ICC)
+  STRING(REGEX REPLACE "/O3" "/O1" CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE})
+  STRING(REGEX REPLACE "/O3" "/O1" CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE})
+ENDIF()
+
 set(the_target "libjpeg")
 
 add_library(${the_target} STATIC ${lib_srcs} ${lib_hdrs} ${lib_ext_hdrs})
Index: CMakeLists.txt
===================================================================
--- CMakeLists.txt	(revision 4732)
+++ CMakeLists.txt	(working copy)
@@ -640,21 +640,12 @@
                    link_directories("${TBB_LIB_DIR}")
                    set(OPENCV_LINKER_LIBS ${OPENCV_LINKER_LIBS} tbb)
                else()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES amd64*)
+                   if(TARGET_ARCH_64)
                        set(X86_64 1)
                    endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES x86_64*)
-                       set(X86_64 1)
-                   endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES i686*)
+                   if(NOT TARGET_ARCH_64)
                        set(X86 1)
                    endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES i386*)
-                       set(X86 1)
-                   endif()
-                   if(${CMAKE_SYSTEM_PROCESSOR} MATCHES x86*)
-                       set(X86 1)
-                   endif()
 
                    set(_TBB_LIB_PATH "${TBB_INCLUDE_DIR}/../lib")
                    if (X86_64)
@@ -885,7 +876,7 @@
     #    set(EXTRA_C_FLAGS "${EXTRA_C_FLAGS} /D _BIND_TO_CURRENT_CRT_VERSION=1 /D _BIND_TO_CURRENT_VCLIBS_VERSION=1")
     #endif()
 
-    set(EXTRA_EXE_LINKER_FLAGS_RELEASE "${EXTRA_EXE_LINKER_FLAGS_RELEASE} /debug")
+    #set(EXTRA_EXE_LINKER_FLAGS_RELEASE "${EXTRA_EXE_LINKER_FLAGS_RELEASE} /debug")
 
     #if(ENABLE_OPENMP)
     #    set(EXTRA_C_FLAGS_RELEASE "${EXTRA_C_FLAGS_RELEASE} /openmp")
Index: modules/legacy/src/3dtracker.cpp
===================================================================
--- modules/legacy/src/3dtracker.cpp	(revision 4732)
+++ modules/legacy/src/3dtracker.cpp	(working copy)
@@ -331,7 +331,7 @@
     int i;
     int x, y;
     CvPoint prev_pt = { 0, 0 };
-    static const CvScalar rgb_colors[] = {
+    static CvScalar rgb_colors[] = {
         {{0,0,255}},
         {{0,128,255}},
         {{0,200,200}},
@@ -339,10 +339,10 @@
         {{200,200,0}},
         {{255,0,0}},
         {{255,0,255}} };
-    static const CvScalar gray_colors[] = {
+    static CvScalar gray_colors[] = {
         {{80}}, {{120}}, {{160}}, {{200}}, {{100}}, {{140}}, {{180}}
     };
-    const CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
+    CvScalar* colors = img->nChannels == 3 ? rgb_colors : gray_colors;
 
     CvScalar color = colors[0];
     for (y = 0, i = 0; y < etalon_size.height; y++)
Index: OpenCVModule.cmake
===================================================================
--- OpenCVModule.cmake	(revision 4732)
+++ OpenCVModule.cmake	(working copy)
@@ -6,6 +6,7 @@
 
     include_directories("${CMAKE_CURRENT_SOURCE_DIR}/include"
                         "${CMAKE_CURRENT_SOURCE_DIR}/src"
+						"${CMAKE_CURRENT_SOURCE_DIR}/modules/features2d/include"
                         "${CMAKE_CURRENT_BINARY_DIR}")
     
     foreach(d ${ARGN})
